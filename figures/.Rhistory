filter(window != 'chr2') %>% as_tibble() %>%
mutate(h = 0.5, mean_normalized = pi.pi0) %>%
select(-pi.pi0)
data2_chr1$window = as.numeric(data2_chr1$window)
data2_chr1$origin <- "theory"
data2_chr1 = data2_chr1 %>%
mutate(window = window + 0.5)
data2_chr1
data2_chr2 = data2 %>%
filter(window == 'chr2') %>% as_tibble() %>%
mutate(h = 0.5, mean_normalized = pi.pi0) %>%
select(-pi.pi0)
data2_chr2$origin <- "theory"
data2_chr2
chr1 = rbind(data_chr1, data2_chr1)
chr1 = chr1 %>%
filter(!is.na(mean_normalized), window > 0.5)
chr1
data_chr2 = data_chr2 %>% mutate(window = 1.1)
data2_chr2 = data2_chr2 %>% mutate(window = 1.2)
chr2 = rbind(data_chr2, data2_chr2)
chr2 = chr2 %>%
filter(!is.na(mean_normalized))
chr2
###########################
# Combine datasets
combined_data <- bind_rows(chr1, chr2)
combined_data = combined_data %>%
filter(alpha == 1)
combined_data
# Plot
theo_vs_simu <- ggplot(combined_data, aes(x = window, y = mean_normalized, color = origin, group = origin)) +
# Add grey band for chr2 (window 1.1 - 1.2) with a single-row dataset
annotate("rect", xmin = 1.05, xmax = 1.25, ymin = -Inf, ymax = Inf,
fill = "grey80", alpha = 0.5) +  geom_line(data = combined_data %>% filter(!window %in% c(1.1, 1.2)), size = 1) +  # Line plot for most data
geom_point(data = combined_data %>% filter(window %in% c(1.1, 1.2)),
aes(color = origin), size = 4, shape = 16) +  # Dots for window = 1.1 & 1.2
facet_grid(~s, scales = "free_x", labeller = labeller(s = function(x) paste0("s = ", x))) +  # Custom facet labels
scale_x_continuous(
breaks = c(seq(0, 1, by = 0.2), 1.15),  # Keep numeric values and add a midpoint for "chr2"
labels = c(as.character(seq(0, 1, by = 0.2)), "chr2")  # Convert numbers to text, replace 1.15 with "chr2"
) +
labs(x = "Sequence position (Mbp)",
y = expression(pi ~ "/" ~ pi[0]),
color = "Origin") +
theme_minimal() +
theme(
legend.title = element_blank(),
text = element_text(size = 16),
axis.title = element_text(size = 18, face = "bold"),
axis.text = element_text(size = 14),
strip.text = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 14)
)
# Plot
theo_vs_simu <- ggplot(combined_data, aes(x = window, y = mean_normalized, color = origin, group = origin)) +
# Add grey band for chr2 (window 1.1 - 1.2) with a single-row dataset
annotate("rect", xmin = 1.05, xmax = 1.25, ymin = -Inf, ymax = Inf,
fill = "grey80", alpha = 0.5) +  geom_line(data = combined_data %>% filter(!window %in% c(1.1, 1.2)), linewidth = 1) +  # Line plot for most data
geom_point(data = combined_data %>% filter(window %in% c(1.1, 1.2)),
aes(color = origin), size = 4, shape = 16) +  # Dots for window = 1.1 & 1.2
facet_grid(~s, scales = "free_x", labeller = labeller(s = function(x) paste0("s = ", x))) +  # Custom facet labels
scale_x_continuous(
breaks = c(seq(0, 1, by = 0.2), 1.15),  # Keep numeric values and add a midpoint for "chr2"
labels = c(as.character(seq(0, 1, by = 0.2)), "chr2")  # Convert numbers to text, replace 1.15 with "chr2"
) +
labs(x = "Sequence position (Mbp)",
y = expression(pi ~ "/" ~ pi[0]),
color = "Origin") +
theme_minimal() +
theme(
legend.title = element_blank(),
text = element_text(size = 16),
axis.title = element_text(size = 18, face = "bold"),
axis.text = element_text(size = 14),
strip.text = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 14)
)
theo_vs_simu
# Plot
theo_vs_simu <- ggplot(combined_data, aes(x = window, y = mean_normalized, color = origin, group = origin)) +
# Add grey band for chr2 (window 1.1 - 1.2) with a single-row dataset
annotate("rect", xmin = 1.05, xmax = 1.25, ymin = -Inf, ymax = Inf,
fill = "grey80", alpha = 0.5) +  geom_line(data = combined_data %>% filter(!window %in% c(1.1, 1.2)), linewidth = 1) +  # Line plot for most data
geom_point(data = combined_data %>% filter(window %in% c(1.1, 1.2)),
aes(color = origin), size = 4, shape = 16) +  # Dots for window = 1.1 & 1.2
facet_grid(~s, scales = "free_x", labeller = labeller(s = function(x) paste0("s = ", x))) +  # Custom facet labels
scale_x_continuous(
breaks = c(seq(0, 1, by = 0.2), 1.15),  # Keep numeric values and add a midpoint for "chr2"
labels = c(as.character(seq(0, 1, by = 0.2)), "chr2")  # Convert numbers to text, replace 1.15 with "chr2"
) +
labs(x = "Sequence position (Mbp)",
y = expression(pi ~ "/" ~ pi[0]),
color = "Origin") +
theme_minimal() +
theme(
legend.title = element_blank(),
text = element_text(size = 16),
axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
strip.text = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 14)
)
theo_vs_simu
#############
data_plot_alpha_1 = data_chr2 %>%
filter(alpha != 1)
data_plot_alpha_2 = data2_chr2 %>%
filter(alpha != 1)
data_plot_alpha = rbind(data_plot_alpha_1, data_plot_alpha_2)
data_plot_alpha
theo_simu_chr2 = ggplot(data_plot_alpha, aes(x = alpha, y = mean_normalized, color = origin)) +
geom_point(aes(shape = origin), size = 5, alpha = 0.8) +  # Different shapes for origin
facet_grid(~s, labeller = labeller(s = function(x) paste0("s = ", x))) +  # Facet per s
labs(x = expression(alpha), y = expression(pi ~ "/" ~ pi[0] ~ "(unlinked chromosome)"),
color = "Origin", shape = "Origin") +
theme_minimal() +
theme(
legend.title = element_blank(),  # Remove legend title
text = element_text(size = 16),
axis.title = element_text(size = 18, face = "bold"),
axis.text = element_text(size = 14),
strip.text = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 14),
# Add separation lines between facets
panel.spacing = unit(0.8, "lines"),  # Adjust spacing between facets
panel.border = element_rect(color = "grey80", fill = NA, linewidth = 0.5)  # Thin black border around each facet
)
theo_simu_chr2
theo_simu_chr2 = ggplot(data_plot_alpha, aes(x = alpha, y = mean_normalized, color = origin)) +
geom_point(aes(shape = origin), size = 5, alpha = 0.8) +  # Different shapes for origin
facet_grid(~s, labeller = labeller(s = function(x) paste0("s = ", x))) +  # Facet per s
labs(x = expression(alpha), y = expression(pi ~ "/" ~ pi[0] ~ "(chromosome 2)"),
color = "Origin", shape = "Origin") +
theme_minimal() +
theme(
legend.title = element_blank(),  # Remove legend title
text = element_text(size = 16),
axis.title = element_text(size = 18, face = "bold"),
axis.text = element_text(size = 14),
strip.text = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 14),
# Add separation lines between facets
panel.spacing = unit(0.8, "lines"),  # Adjust spacing between facets
panel.border = element_rect(color = "grey80", fill = NA, linewidth = 0.5)  # Thin black border around each facet
)
theo_simu_chr2
# Plot
theo_vs_simu <- ggplot(combined_data, aes(x = window, y = mean_normalized, color = origin, group = origin)) +
# Add grey band for chr2 (window 1.1 - 1.2) with a single-row dataset
annotate("rect", xmin = 1.05, xmax = 1.25, ymin = -Inf, ymax = Inf,
fill = "grey80", alpha = 0.5) +  geom_line(data = combined_data %>% filter(!window %in% c(1.1, 1.2)), linewidth = 1) +  # Line plot for most data
geom_point(data = combined_data %>% filter(window %in% c(1.1, 1.2)),
aes(color = origin), size = 4, shape = 16) +  # Dots for window = 1.1 & 1.2
facet_grid(~s, scales = "free_x", labeller = labeller(s = function(x) paste0("s = ", x))) +  # Custom facet labels
scale_x_continuous(
breaks = c(seq(0, 1, by = 0.2), 1.15),  # Keep numeric values and add a midpoint for "chr2"
labels = c(as.character(seq(0, 1, by = 0.2)), "chr2")  # Convert numbers to text, replace 1.15 with "chr2"
) +
labs(x = "Sequence position (Mbp)",
y = expression(pi ~ "/" ~ pi[0]),
color = "Origin") +
theme_minimal() +
theme(
legend.title = element_blank(),
text = element_text(size = 16),
axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
strip.text = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 14)
) +
guides(
color = guide_legend(override.aes = list(shape = c(16, 17))),  # Ensure different shapes are in the legend
shape = guide_legend(override.aes = list(color = c("#E6550D", "#1F77B4")))  # Ensure correct colors for shapes
)
theo_vs_simu
theo_vs_simu <- ggplot(combined_data, aes(x = window, y = mean_normalized, color = origin, shape = origin, group = origin)) +
# Add grey band for chr2 (window 1.1 - 1.2)
annotate("rect", xmin = 1.05, xmax = 1.25, ymin = -Inf, ymax = Inf,
fill = "grey80", alpha = 0.5) +
geom_line(data = combined_data %>% filter(!window %in% c(1.1, 1.2)), size = 1) +  # Line plot for most data
geom_point(data = combined_data %>% filter(window %in% c(1.1, 1.2)), size = 4) +  # Points for special windows
facet_grid(~s, scales = "free_x", labeller = labeller(s = function(x) paste0("s = ", x))) +  # Custom facet labels
scale_x_continuous(
breaks = c(seq(0, 1, by = 0.2), 1.15),
labels = c(as.character(seq(0, 1, by = 0.2)), "chr2")
) +
labs(x = "Sequence position (Mbp)",
y = expression(pi ~ "/" ~ pi[0]),
color = "Origin",
shape = "Origin") +  # Make sure both aesthetics have the same title
theme_minimal() +
theme(
legend.title = element_blank(),
text = element_text(size = 16),
axis.title = element_text(size = 18, face = "bold"),
axis.text = element_text(size = 14),
strip.text = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 14)
) +
guides(
color = guide_legend(override.aes = list(shape = c(16, 17))),  # Ensure different shapes are in the legend
shape = guide_legend(override.aes = list(color = c("#E6550D", "#1F77B4")))  # Ensure correct colors for shapes
)
print(theo_vs_simu)
theo_vs_simu
scales::hue_pal()(2)  # Get the first two default ggplot2 colors
theo_vs_simu <- ggplot(combined_data, aes(x = window, y = mean_normalized, color = origin, shape = origin, group = origin)) +
# Add grey band for chr2 (window 1.1 - 1.2)
annotate("rect", xmin = 1.05, xmax = 1.25, ymin = -Inf, ymax = Inf,
fill = "grey80", alpha = 0.5) +
geom_line(data = combined_data %>% filter(!window %in% c(1.1, 1.2)), size = 1) +  # Line plot for most data
geom_point(data = combined_data %>% filter(window %in% c(1.1, 1.2)), size = 4) +  # Points for special windows
facet_grid(~s, scales = "free_x", labeller = labeller(s = function(x) paste0("s = ", x))) +  # Custom facet labels
scale_x_continuous(
breaks = c(seq(0, 1, by = 0.2), 1.15),
labels = c(as.character(seq(0, 1, by = 0.2)), "chr2")
) +
labs(x = "Sequence position (Mbp)",
y = expression(pi ~ "/" ~ pi[0]),
color = "Origin",
shape = "Origin") +  # Make sure both aesthetics have the same title
theme_minimal() +
theme(
legend.title = element_blank(),
text = element_text(size = 16),
axis.title = element_text(size = 18, face = "bold"),
axis.text = element_text(size = 14),
strip.text = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 14)
) +
guides(
color = guide_legend(override.aes = list(shape = c(16, 17))),  # Ensure different shapes are in the legend
shape = guide_legend(override.aes = list(color = c("#F8766D", "#00BFC4")))  # Ensure correct colors for shapes
)
theo_vs_simu
#############
data_plot_alpha_1 = data_chr2 %>%
filter(alpha != 1)
data_plot_alpha_2 = data2_chr2 %>%
filter(alpha != 1)
data_plot_alpha = rbind(data_plot_alpha_1, data_plot_alpha_2)
data_plot_alpha
theo_simu_chr2 = ggplot(data_plot_alpha, aes(x = alpha, y = mean_normalized, color = origin)) +
geom_point(aes(shape = origin), size = 5, alpha = 0.8) +  # Different shapes for origin
facet_grid(~s, labeller = labeller(s = function(x) paste0("s = ", x))) +  # Facet per s
labs(x = expression(alpha), y = expression(pi ~ "/" ~ pi[0] ~ "(chromosome 2)"),
color = "Origin", shape = "Origin") +
theme_minimal() +
theme(
legend.title = element_blank(),  # Remove legend title
text = element_text(size = 16),
axis.title = element_text(size = 18, face = "bold"),
axis.text = element_text(size = 14),
strip.text = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 14),
# Add separation lines between facets
panel.spacing = unit(0.8, "lines"),  # Adjust spacing between facets
panel.border = element_rect(color = "grey80", fill = NA, linewidth = 0.5)  # Thin black border around each facet
)
theo_simu_chr2
theo_simu_chr2 = ggplot(data_plot_alpha, aes(x = alpha, y = mean_normalized, color = origin)) +
geom_point(aes(shape = origin), size = 5, alpha = 0.8) +  # Different shapes for origin
facet_grid(~s, labeller = labeller(s = function(x) paste0("s = ", x))) +  # Facet per s
labs(x = expression(alpha), y = expression(pi ~ "/" ~ pi[0] ~ "(chromosome 2)"),
color = "Origin", shape = "Origin") +
theme_minimal() +
theme(
legend.title = element_blank(),  # Remove legend title
text = element_text(size = 16),
axis.title = element_text(size = 18, face = "bold"),
axis.text = element_text(size = 14),
strip.text = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 14),
legend.position = "bottom",
# Add separation lines between facets
panel.spacing = unit(0.8, "lines"),  # Adjust spacing between facets
panel.border = element_rect(color = "grey80", fill = NA, linewidth = 0.5)  # Thin black border around each facet
)
theo_simu_chr2
theo_vs_simu <- ggplot(combined_data, aes(x = window, y = mean_normalized, color = origin, shape = origin, group = origin)) +
# Add grey band for chr2 (window 1.1 - 1.2)
annotate("rect", xmin = 1.05, xmax = 1.25, ymin = -Inf, ymax = Inf,
fill = "grey80", alpha = 0.5) +
geom_line(data = combined_data %>% filter(!window %in% c(1.1, 1.2)), size = 1) +  # Line plot for most data
geom_point(data = combined_data %>% filter(window %in% c(1.1, 1.2)), size = 4) +  # Points for special windows
facet_grid(~s, scales = "free_x", labeller = labeller(s = function(x) paste0("s = ", x))) +  # Custom facet labels
scale_x_continuous(
breaks = c(seq(0, 1, by = 0.2), 1.15),
labels = c(as.character(seq(0, 1, by = 0.2)), "chr2")
) +
labs(x = "Sequence position (Mbp)",
y = expression(pi ~ "/" ~ pi[0]),
color = "Origin",
shape = "Origin") +  # Make sure both aesthetics have the same title
theme_minimal() +
theme(
legend.title = element_blank(),
text = element_text(size = 16),
axis.title = element_text(size = 18, face = "bold"),
axis.text = element_text(size = 14),
strip.text = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 14),
legend.position = "bottom"
) +
guides(
color = guide_legend(override.aes = list(shape = c(16, 17))),  # Ensure different shapes are in the legend
shape = guide_legend(override.aes = list(color = c("#E6550D", "#1F77B4")))  # Ensure correct colors for shapes
)
theo_vs_simu
theo_vs_simu <- ggplot(combined_data, aes(x = window, y = mean_normalized, color = origin, shape = origin, group = origin)) +
# Add grey band for chr2 (window 1.1 - 1.2)
annotate("rect", xmin = 1.05, xmax = 1.25, ymin = -Inf, ymax = Inf,
fill = "grey80", alpha = 0.5) +
geom_line(data = combined_data %>% filter(!window %in% c(1.1, 1.2)), size = 1) +  # Line plot for most data
geom_point(data = combined_data %>% filter(window %in% c(1.1, 1.2)), size = 4) +  # Points for special windows
facet_grid(~s, scales = "free_x", labeller = labeller(s = function(x) paste0("s = ", x))) +  # Custom facet labels
scale_x_continuous(
breaks = c(seq(0, 1, by = 0.2), 1.15),
labels = c(as.character(seq(0, 1, by = 0.2)), "chr2")
) +
labs(x = "Sequence position (Mbp)",
y = expression(pi ~ "/" ~ pi[0]),
color = "Origin",
shape = "Origin") +  # Make sure both aesthetics have the same title
theme_minimal() +
theme(
legend.title = element_blank(),
text = element_text(size = 16),
axis.title = element_text(size = 18, face = "bold"),
axis.text = element_text(size = 14),
strip.text = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 14),
legend.position = "bottom"
) +
guides(
color = guide_legend(override.aes = list(shape = c(16, 17))),  # Ensure different shapes are in the legend
shape = guide_legend(override.aes = list(color = c("#F8766D", "#00BFC4")))  # Ensure correct colors for shapes
)
theo_vs_simu
library(patchwork)
# Label the plots as A and B
final_plot <- (theo_vs_simu / theo_simu_chr2) +
plot_annotation(tag_levels = "A")  # This automatically adds "A" and "B" labels
# Display the final combined plot
print(final_plot)
theo_simu_chr2 = ggplot(data_plot_alpha, aes(x = alpha, y = mean_normalized, color = origin)) +
geom_point(aes(shape = origin), size = 5, alpha = 0.8) +  # Different shapes for origin
facet_grid(~s, labeller = labeller(s = function(x) paste0("s = ", x))) +  # Facet per s
labs(x = expression(alpha), y = expression(pi ~ "/" ~ pi[0] ~ "(chromosome 2)"),
color = "Origin", shape = "Origin") +
theme_minimal() +
theme(
legend.title = element_blank(),  # Remove legend title
text = element_text(size = 16),
axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
strip.text = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 14),
# Add separation lines between facets
panel.spacing = unit(0.8, "lines"),  # Adjust spacing between facets
panel.border = element_rect(color = "grey80", fill = NA, linewidth = 0.5)  # Thin black border around each facet
)
theo_simu_chr2
library(patchwork)
# Label the plots as A and B
final_plot <- (theo_vs_simu / theo_simu_chr2) +
plot_annotation(tag_levels = "A")  # This automatically adds "A" and "B" labels
# Display the final combined plot
print(final_plot)
theo_vs_simu <- ggplot(combined_data, aes(x = window, y = mean_normalized, color = origin, shape = origin, group = origin)) +
# Add grey band for chr2 (window 1.1 - 1.2)
annotate("rect", xmin = 1.05, xmax = 1.25, ymin = -Inf, ymax = Inf,
fill = "grey80", alpha = 0.5) +
geom_line(data = combined_data %>% filter(!window %in% c(1.1, 1.2)), size = 1) +  # Line plot for most data
geom_point(data = combined_data %>% filter(window %in% c(1.1, 1.2)), size = 4) +  # Points for special windows
facet_grid(~s, scales = "free_x", labeller = labeller(s = function(x) paste0("s = ", x))) +  # Custom facet labels
scale_x_continuous(
breaks = c(seq(0, 1, by = 0.2), 1.15),
labels = c(as.character(seq(0, 1, by = 0.2)), "chr2")
) +
labs(x = "Sequence position (Mbp)",
y = expression(pi ~ "/" ~ pi[0]),
color = "Origin",
shape = "Origin") +  # Make sure both aesthetics have the same title
theme_minimal() +
theme(
legend.title = element_blank(),
text = element_text(size = 16),
axis.title = element_text(size = 18, face = "bold"),
axis.text = element_text(size = 14),
strip.text = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 14),
legend.position = "bottom"
) +
guides(
color = guide_legend(override.aes = list(shape = c(16, 17))),  # Ensure different shapes are in the legend
shape = guide_legend(override.aes = list(color = c("#F8766D", "#00BFC4")))  # Ensure correct colors for shapes
)
theo_vs_simu <- ggplot(combined_data, aes(x = window, y = mean_normalized, color = origin, shape = origin, group = origin)) +
# Add grey band for chr2 (window 1.1 - 1.2)
annotate("rect", xmin = 1.05, xmax = 1.25, ymin = -Inf, ymax = Inf,
fill = "grey80", alpha = 0.5) +
geom_line(data = combined_data %>% filter(!window %in% c(1.1, 1.2)), size = 1) +  # Line plot for most data
geom_point(data = combined_data %>% filter(window %in% c(1.1, 1.2)), size = 4) +  # Points for special windows
facet_grid(~s, scales = "free_x", labeller = labeller(s = function(x) paste0("s = ", x))) +  # Custom facet labels
scale_x_continuous(
breaks = c(seq(0, 1, by = 0.2), 1.15),
labels = c(as.character(seq(0, 1, by = 0.2)), "chr2")
) +
labs(x = "Sequence position (Mbp)",
y = expression(pi ~ "/" ~ pi[0]),
color = "Origin",
shape = "Origin") +  # Make sure both aesthetics have the same title
theme_minimal() +
theme(
legend.title = element_blank(),
text = element_text(size = 16),
axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
strip.text = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 14),
legend.position = "bottom"
) +
guides(
color = guide_legend(override.aes = list(shape = c(16, 17))),  # Ensure different shapes are in the legend
shape = guide_legend(override.aes = list(color = c("#F8766D", "#00BFC4")))  # Ensure correct colors for shapes
)
theo_vs_simu
#############
data_plot_alpha_1 = data_chr2 %>%
filter(alpha != 1)
data_plot_alpha_2 = data2_chr2 %>%
filter(alpha != 1)
data_plot_alpha = rbind(data_plot_alpha_1, data_plot_alpha_2)
data_plot_alpha
theo_simu_chr2 = ggplot(data_plot_alpha, aes(x = alpha, y = mean_normalized, color = origin)) +
geom_point(aes(shape = origin), size = 5, alpha = 0.8) +  # Different shapes for origin
facet_grid(~s, labeller = labeller(s = function(x) paste0("s = ", x))) +  # Facet per s
labs(x = expression(alpha), y = expression(pi ~ "/" ~ pi[0] ~ "(chromosome 2)"),
color = "Origin", shape = "Origin") +
theme_minimal() +
theme(
legend.title = element_blank(),  # Remove legend title
text = element_text(size = 16),
axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
strip.text = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 14),
# Add separation lines between facets
panel.spacing = unit(0.8, "lines"),  # Adjust spacing between facets
panel.border = element_rect(color = "grey80", fill = NA, linewidth = 0.5)  # Thin black border around each facet
)
theo_simu_chr2
library(patchwork)
# Label the plots as A and B
final_plot <- (theo_vs_simu / theo_simu_chr2) +
plot_annotation(tag_levels = "A")  # This automatically adds "A" and "B" labels
# Display the final combined plot
print(final_plot)
theo_simu_chr2 = ggplot(data_plot_alpha, aes(x = alpha, y = mean_normalized, color = origin)) +
geom_point(aes(shape = origin), size = 5, alpha = 0.8) +  # Different shapes for origin
facet_grid(~s, labeller = labeller(s = function(x) paste0("s = ", x))) +  # Facet per s
labs(x = expression(alpha), y = expression(pi ~ "/" ~ pi[0] ~ "(chromosome 2)"),
color = "Origin", shape = "Origin") +
theme_minimal() +
theme(
legend.title = element_blank(),  # Remove legend title
text = element_text(size = 16),
axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
strip.text = element_text(size = 16, face = "bold"),
legend.position = "none"),
theo_simu_chr2 = ggplot(data_plot_alpha, aes(x = alpha, y = mean_normalized, color = origin)) +
geom_point(aes(shape = origin), size = 5, alpha = 0.8) +  # Different shapes for origin
facet_grid(~s, labeller = labeller(s = function(x) paste0("s = ", x))) +  # Facet per s
labs(x = expression(alpha), y = expression(pi ~ "/" ~ pi[0] ~ "(chromosome 2)"),
color = "Origin", shape = "Origin") +
theme_minimal() +
theme(
legend.title = element_blank(),  # Remove legend title
text = element_text(size = 16),
axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
strip.text = element_text(size = 16, face = "bold"),
legend.position = "none"),
theo_simu_chr2 = ggplot(data_plot_alpha, aes(x = alpha, y = mean_normalized, color = origin)) +
geom_point(aes(shape = origin), size = 5, alpha = 0.8) +  # Different shapes for origin
facet_grid(~s, labeller = labeller(s = function(x) paste0("s = ", x))) +  # Facet per s
labs(x = expression(alpha), y = expression(pi ~ "/" ~ pi[0] ~ "(chromosome 2)"),
color = "Origin", shape = "Origin") +
theme_minimal() +
theme(
legend.title = element_blank(),  # Remove legend title
text = element_text(size = 16),
axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
strip.text = element_text(size = 16, face = "bold"),
legend.position = "none",
# Add separation lines between facets
panel.spacing = unit(0.8, "lines"),  # Adjust spacing between facets
panel.border = element_rect(color = "grey80", fill = NA, linewidth = 0.5)  # Thin black border around each facet
)
theo_simu_chr2
library(patchwork)
# Label the plots as A and B
final_plot <- (theo_vs_simu / theo_simu_chr2) +
plot_annotation(tag_levels = "A")  # This automatically adds "A" and "B" labels
# Display the final combined plot
print(final_plot)
final_plot
ggsave('fig3.png', plot = final_plot, bg='white')
