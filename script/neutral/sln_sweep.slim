// Universit√© Paris-Saclay
// Lab : LISN ~ UMR9015 ~ BIOINFO team 

initialize() {
	initializeTreeSeq();

	initializeMutationRate(0); // Overlay for neutral part of the genome so mu = 0 in the simulations
	initializeMutationType("m1", 0.5, "f", 0.0);
	//initializeMutationType("m2", h, "f", s);
	m1.mutationStackPolicy = "l";
	initializeGenomicElementType("g1", m1, 1.0);
	
	initializeRecombinationRate(c(rho*GR, 0.5, rho*GR), c(999999,1000000,1999999)); // Two independant chromosomes 
	
	initializeGenomicElement(g1, 0, 1999999);
	
	// Variable to store the generation for the next sexual event to happen
	defineGlobal("gen_recomb", asInteger(rnorm(1,GR,asInteger(GR/10))));
}
	
1 early(){ sim.addSubpop("p1", Ne);}

early() {

	// If facultative sex (alpha < 1): do cloning then sex at the "gen_recomb" generation (also define the next gen_recom)
	// If not (alpha = 1) : do sex by default

	if(GR!=1){ // <=> if alpha < 1
		if (sim.cycle != gen_recomb){
			p1.setCloningRate(1.0);
		}
		else {
			p1.setCloningRate(0.0);
			defineGlobal("gen_recomb", gen_recomb + asInteger(rnorm(1,GR,asInteger(GR/10))));
		}
	}
}

2000:10000 late() { 
	sim.treeSeqOutput(paste("results/ts_",rep,"_",GR,".trees",sep=""));
	sim.outputFixedMutations();
	sim.simulationFinished();
}

